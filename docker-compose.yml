version: '3.4'

networks:
  demonet:

services:
  products.queue:
    image: ${DOCKER_REGISTRY-}productsqueue
    build:
      context: .
      dockerfile: src/Services/Products.Queue/Dockerfile
    container_name: productsqueue
    ports:
      - 8081:80
      - 44301:443
    depends_on:
      - rabbitmq
    networks:
      - demonet

  products.database:
    image: ${DOCKER_REGISTRY-}productsdatabase
    build:
      context: .
      dockerfile: src/Services/Products.Database/Dockerfile
    container_name: productsdatabase
    ports:
      - 8082:80
      - 44302:443
    depends_on:
      - rabbitmq
      - mongo.data
    networks:
      - demonet

  web:
    image: ${DOCKER_REGISTRY-}web
    build:
      context: .
      dockerfile: src/Web/Dockerfile
    container_name: web
    ports:
      - 8080:80
      - 443:443
    depends_on:
      - rabbitmq
      - redis.data
      - products.database
      - products.queue
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - demonet

  rabbitmq:
    image: rabbitmq:3-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=products
      - RABBITMQ_DEFAULT_PASS=demopass
    ports:
      - 15672:15672
      - 5672:5672
    container_name: rabbitmq
    networks:
      - demonet
    volumes:
      - rabbitdata:/var/lib/rabbitmq

  redis.data:
    image: redis 
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - demonet

  mongo.data:
    image: mongo:latest
    environment:
        - MONGO_INITDB_DATABASE=productsdb
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=admin123
        - MONGO_DATA_DIR=/data/db
        - MONGO_LOG_DIR=/dev/null
        - MONGODB_USER=demo
        - MONGODB_PASS=demo123
    ports:
        - 27017:27017
    volumes:
        - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
        - mongodata:/data/db
    networks:
      - demonet
    container_name: mongodb
volumes:
  mongodata:   
  rabbitdata:
